@page "/customers"
@using BlazorWebAssemblyApp.Models

<h3>Customer List</h3>

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchCheckChecked" @bind=isChecked>
</div>

<div>
    <label for="searchInputText">Search Text:</label>

    <DebounceSearchInput ValueChanged=@OnSearch DebounceMiliseconds="250" />

    <button class="btn btn-primary">Search</button>
</div>


<CascadingValue Value="@Theme">

    <CascadingValue Value="@ApplicationContext">

            <Loader IsLoading=@isLoading>
                <Table Items="@customers">
                    <HeaderTemplate>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </HeaderTemplate>

                    <RowTemplate Context="customer">
                        <td>@customer.Id </td>
                        <td>@customer.Name</td>
                        <td>@customer.Email</td>
                        <td><a class="btn btn-primary" href="/customers/view/@customer.Id">View</a></td>
                    </RowTemplate>
                </Table>

            </Loader>
        </CascadingValue>
    </CascadingValue>

@code {
    private string Theme => isChecked ? "dark" : "light";

    private ApplicationContext ApplicationContext = new ApplicationContext { Count = 10, Mode = false };

    private bool isChecked = true;

    private async Task OnSearch(string value)
    {
        // Wywołaj API
        Console.WriteLine($"Searching customers... {value}");

        await Task.Delay(TimeSpan.FromSeconds(3));

        Console.WriteLine($"Found.");
    }


}